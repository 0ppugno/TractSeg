#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright 2017 Division of Medical Image Computing, German Cancer Research Center (DKFZ)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from __future__ import absolute_import
from __future__ import division
from __future__ import print_function

import argparse

from tractseg.libs import utils

def main():
    parser = argparse.ArgumentParser(description="Download all pretrained weights (instead of them being downloaded "
                                                 "automatically on the fly when needed). Will download them to"
                                                 "`~/.tractseg/` (default). If you want them to be downloaded to a "
                                                 "different directory you can specify it by adding "
                                                 "`weights_dir=absolute_path_to_where_you_want_it` "
                                                 "to `~/.tractseg/config.txt`",
                                        epilog="Written by Jakob Wasserthal")
    args = parser.parse_args()

    utils.download_pretrained_weights("tract_segmentation")
    utils.download_pretrained_weights("tract_segmentation", dropout_sampling=True)
    utils.download_pretrained_weights("endings_segmentation")
    utils.download_pretrained_weights("dm_regression")
    utils.download_pretrained_weights("peak_regression", part="Part1")
    utils.download_pretrained_weights("peak_regression", part="Part2")
    utils.download_pretrained_weights("peak_regression", part="Part3")
    utils.download_pretrained_weights("peak_regression", part="Part4")


if __name__ == '__main__':
    main()