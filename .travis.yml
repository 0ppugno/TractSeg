dist: trusty
sudo: required  # gives more RAM (otherwise memory error for TOM)
language: python
#services:
#  - docker
matrix:
  include:
  - python: "2.7"
    env: PYTORCH_URL=http://download.pytorch.org/whl/cpu/torch-0.4.1-cp27-cp27mu-linux_x86_64.whl
  - python: "3.5"
    env: PYTORCH_URL=http://download.pytorch.org/whl/cpu/torch-0.4.1-cp35-cp35m-linux_x86_64.whl
before_install:
  - pip install $PYTORCH_URL
install:
  - pip install .
script:
#  - docker build -t wasserth/tractseg_container:master .
#
#  #Peaks
#  - docker run -v $TRAVIS_BUILD_DIR/examples:/data -it wasserth/tractseg_container:master TractSeg
#    -i /data/Diffusion.nii.gz -o /data/docker_test --raw_diffusion_input --single_orientation
#  #- pytest -v tests/test_end_to_end.py::test_end_to_end::test_csd_peaks
#  - pytest -v tests/test_end_to_end.py::test_end_to_end::test_tractseg_output_docker
#   - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
#   - docker push wasserth/tractseg_container:master
#
##  - rm -vR examples/tractseg_output/bundle_segmentations
##  - cp -v tests/reference_files/peaks.nii.gz examples/tractseg_output/peaks.nii.gz

  #Bundles
  - TractSeg -i tests/reference_files/peaks.nii.gz -o examples --single_orientation
  - pytest -v tests/test_end_to_end.py::test_end_to_end::test_tractseg_output

  #Endings
  - TractSeg -i tests/reference_files/peaks.nii.gz -o examples --output_type endings_segmentation --single_orientation
  - pytest -v tests/test_end_to_end.py::test_end_to_end::test_endingsseg_output

  #TOM
  - TractSeg -i tests/reference_files/peaks.nii.gz -o examples --output_type TOM
  - pytest -v tests/test_end_to_end.py::test_end_to_end::test_peakreg_output

  #FA
  - calc_FA -i examples/Diffusion.nii.gz -o examples/FA.nii.gz --brain_mask tests/reference_files/nodif_brain_mask.nii.gz
    --bvals examples/Diffusion.bvals --bvecs examples/Diffusion.bvecs
  - pytest -v tests/test_end_to_end.py::test_end_to_end::test_FA
 # - python tests/test_end_to_end.py test_end_to_end.test_FA  #would also work

  #Track
  - docker run -v $TRAVIS_BUILD_DIR:/data -it tractseg_container TractSeg -i /data/tests/reference_files/peaks.nii.gz -o /data/examples
    --output_type TOM --track --only_track --filter_tracking_by_endpoints

  #Tractometry
  - Tractometry -i examples/tractseg_output/TOM_trackings -o examples/Tractometry.csv
    -e examples/tractseg_output/endings_segmentations/ -s examples/FA.nii.gz
  - pytest -v tests/test_end_to_end.py::test_end_to_end::test_tractometry


##  - TractSeg -i tests/reference_files/peaks.nii.gz -o examples --single_orientation
##  - pytest -v tests/test_end_to_end.py::test_end_to_end::test_tractseg_output
#
##  - docker run -v $TRAVIS_BUILD_DIR/examples:/data -it tractseg_container TractSeg -i /data/Diffusion_mrtrix_peaks.nii.gz -o /data --single_orientation --single_output_file
##  - docker run -v $TRAVIS_BUILD_DIR/examples:/data -it tractseg_container TractSeg -i /data/Diffusion_mrtrix_peaks.nii.gz -o /data --output_type TOM --single_orientation --single_output_file   #out of memory
##  - docker run -v $TRAVIS_BUILD_DIR/examples:/data -it wasserth/tractseg_container:v1.4 TractSeg -i /data/Diffusion.nii.gz -o /data

#  - pytest
